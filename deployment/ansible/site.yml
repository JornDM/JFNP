# site.yml
---
# Start Configuring ALL hosts
- hosts: all
  become: yes 
  roles: []
  tasks:

  # Starts and enables firewalld service 
  - name: Starting and enabling firewalld service
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    become: yes
    loop: 
    - firewalld 

  - name: Open port 3306 for database connection
    firewalld: 
      port: 53/udp
      permanent: true 
      immediate: true 
      state: enabled
    become: true 

  # Installs useful software like vim, pip, etc.
  - name: Installing Useful Software 
    ansible.builtin.dnf:
      name: 
      - vim
      - python3-pip
      - mkpasswd
      - bind-utils
      state: latest

  # # Changes the DNS Server entry in /etc/resolv.conf to '192.168.10.3'
  # - name: Changing DNS Server in /etc/resolv.conf on every server
  #   replace:
  #     path: /etc/resolv.conf
  #     regexp: '10.0.2.3'
  #     replace: '192.168.10.3'

# ----------------------------
#   Start configuration db
# ----------------------------
- hosts: db
  become: yes 
  roles: []
  tasks:
    # Changes hostname to 'Alpha'
    - name: Changing hostname to 'Alpha'
      ansible.builtin.hostname: 
        name: Alpha


    # Opens port 3306 so that we can connect to the database using software like MySQL Workbench
    - name: Open port 3306 for database connection
      firewalld: 
        port: 3306/tcp
        permanent: true 
        immediate: true 
        state: enabled
      become: true 

    # Configures firewall to allow the mysql service
    - name: Allow service mysql for database connection
      firewalld:
        permanent: yes 
        immediate: yes
        service: mysql 
        state: enabled

    # Installs the MariaDB service 
    - name: Install Mariadb Service 
      package: 
        name: mariadb-server
        state: present 
    
    # Makes sure MariaDB is running and it enabled
    - name: Start and Enable MariaDB 
      service: 
        name: mariadb 
        state: started
        enabled: true 
      
    # Installs neccesary module for mariadb with pip 
    - name: Install python-mysqldb using pip
      ansible.builtin.pip: 
        name: PyMySQL

    # creates .my.cnf config file for root db user
    - name: Create '/root/.my.cnf' for root db user
      copy:
        src: /vagrant/configfiles/db/.my.cnf
        dest: /root/.my.cnf

    # Configures a password for the root user
    - name: Set the root password 
      shell: mysql --init-command="alter user root@localhost identified by 'test123'";

    # Creates a user 'jeff' that will be used to access the mariadb 
    - name: Create new database user jeff
      mysql_user:
          name: jeff
          password: test123
          priv: '*.*:ALL,GRANT'
          state: present
          login_user: root
          login_password: test123
          host: "%"
    
    # Creates a new, empty database called 'Plants'
    - name: Create a new database 'Plants'
      mysql_db:
        name: Plants
        state: present

    # Fills the empty database with data about different plants, prices, etc. 
    - name: Fill database 'Plants' with data using plants.sql script
      shell: mysql -ujeff -ptest123 Plants < /vagrant/configfiles/db/plants.sql

    # Create directory db_backups to store different version of database backups in
    - name: Create directory db_backups
      ansible.builtin.file:
        path: /home/vagrant/db_backups 
        state: directory 
        mode: '0755'

    # Create backup of the data inside the database 'Plants'
    - name: Creating backup for database 'Plants'
      shell: /vagrant/scripts/mariadb_backup.sh

    # Creates a cronjob that will make a backup for the database, every day at 4 AM.
    - name: Create a backup every day at 4 AM
      cron:
        name: 'Create Backup'
        hour: 4 
        job: vagrant/scripts/mariadb_backup.sh

# ------------------------------
#   Start Configuration router
# ------------------------------
- hosts: router
  become: yes
  roles: []
  tasks:
    # Changes hostname to 'Beta'
    - name: Changing hostname to 'Beta'
      ansible.builtin.hostname:
        name: Beta
      
    # Install DNSmasq service that will work as a dns and dhcp server  
    - name: Install DNSmasq
      dnf:
        name: dnsmasq
        state: present 

    # Configure DNSmasq to be able to do forward dns lookups and as a DHCP server
    - name: Configure DNSmasq using configfile (As a DNS Server and DHCP Server)
      copy:
        src: /vagrant/configfiles/router/dnsmasq.conf
        dest: /etc/dnsmasq.conf 
      
    # Configure DNSmasq to be able to do reverse dns lookups
    - name: Configure DNSmasq to be able to execute reverse lookups
      copy:
        src: /vagrant/configfiles/router/192.168.10.rev
        dest: /etc/192.168.10.rev

    # (Re)starting DNS server 
    - name: Restart DNSmasq
      service: 
        name: dnsmasq
        state: restarted
        enabled: yes 
    
    - name: Make sure DNSmasq is started
      shell: systemctl start dnsmasq

    # Installing services 'iptables' to provide NAT
    - name: Install iptables
      package:
        name: iptables-services
        state: present
      
    # Configures iptables to work with NAT
    - name: Configure iptables for NAT
      iptables:
        chain: POSTROUTING
        jump: MASQUERADE
        table: nat 
        destination: "0.0.0.0/0"
        out_interface: eth0
        state: present 
    
    # Enables IP forwarding for NAT
    - name: Enable IP Forwarding
      sysctl:
        name: net.ipv4.ip_forward
        state: present
        value: 1 
        sysctl_set: yes 
    
    # Creates a norma config file for NAT
    - name: Create the NAT config file
      file:
        path: /etc/sysctl.d/99-nat-router.conf
        state: touch 

    # Add one line of content to the NAT config file 
    - name: Make the config fle nat router config file 
      lineinfile:
        dest: /etc/sysctl.d/99-nat-router.conf
        line: "net.ipv4.ip_forward = 1"
        state: present

    # Configures firewall to  allow the DNS and DHCP service 
    - name: Allow DNS and DHCP services
      firewalld:
        permanent: yes 
        immediate: yes
        service: "{{ item }}"
        state: enabled
      with_items:
        - dns 
        - dhcp

# -------------------------
# Start Configuration WEB
# -------------------------
- hosts: web 
  become: yes 
  roles: []
  tasks:
    # Changes hostname to 'Gamma'
    - name: Changing hostname to 'Gamma'
      ansible.builtin.hostname:
        name: Gamma
    
    - name: Install Apache Web Server
      dnf: 
        name: httpd
        state: present
    
    - name: Start Apache Web Server
      service: 
        name: httpd
        state: started
        enabled: yes 
    
    - name: Copy the Apache Config File
      copy:
        src: /vagrant/configfiles/web/httpd.conf
        dest: /etc/httpd/conf/httpd.conf
        owner: root
        group: root
        mode: 0644
    
    - name: Copy over the configfiles to /var/www/html/
      copy:
        src: "/vagrant/configfiles/web/webpage/{{ item }}"
        dest: "/var/www/html/"
        owner: apache
        group: apache
        mode: 0644
      with_items:
        - index.html

    - name: Restart Apache Web Server
      shell: systemctl restart httpd

    - name: Open port 80 and 443 for web connection
      firewalld: 
        port: "{{ item }}/tcp"
        permanent: true 
        immediate: true 
        state: enabled
      become: true
      with_items:
        - 80
        - 443 

    
    
    



    









     
      




